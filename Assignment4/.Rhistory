plot(x,y)
par(las=1)
points(x1, y1, col="red")
x1<-norm(10)
y1<-norm(10)
points(x1, y1, col="red")
x1<-norm(10)
y1<-norm(10)
x1<-rnorm(10)
y1<-rnorm(10)
points(x1, y1, col="red")
graphics.off()
plot(x,y)
x1<-rnorm(10)
y1<-rnorm(10)
points(x1, y1, col="red")
pdf("file=testRplot.pdf")
x<-rnorm(100)
hist(x)
dev.off()
library(lattice)
library(nlme)
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
xyplot(distance ~ age | Subject, data = Orthodont)
xyplot(distance ~ age | Subject, data = Orthodont, type = "b")
graphics.off()
png()
png()
gzfile()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
dev.off()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
hist(x)
dev.off()
library(lattice)
library(nlme)
xyplot(distance ~ age | Subject, data = Orthodont)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
Diet
set.seed(1)
rpois(5, 2)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
set.seed(1)
rpois(5, 2)
plot(0, 0, main = "theta")
plot(0, 0, main = expression("theta")
)
plot(0, 0, main = expression(theta))
plot(0, 0, main = expression("theta"))
plot(0, 0, main = substitute(theta))
plot(0, 0, main = expression(theta == 0),
ylab = expression(hat(gamma) == 0),
xlab = expression(sum(x[i] * y[i], i == 1, n)))
plot(0, 0, main = expression(theta),
ylab = expression(hat(gamma) == 0),
xlab = expression(sum(x[i] * y[i], i == 1, n)))
set.seed(1)
rpois(5, 2)
firstName = "jeff"
firstName
class(firstName)
data = c("jeff", TRUE)
class(data)
no = 1
class(no)
no = 1L
class(no)
x<--5:5
x
dbinom(x, size=10, prob=0.5)
round(dbinom(x, size=10, prob=0.5))
round(dbinom(x, size=10, prob=0.5), 2)
round(dbinom(x, size=10, prob=0.5), 2)
round(dbinom(x, size=10, prob=0.5), 2)
heights = rorm(10, mean=188, sd=3)
heights = rnorm(10, mean=188, sd=3)
heights
sample(heights,size = 5, replace=FALSE)
round(heights)
round(heights, 1)
sample(heights,size = 5, replace=FALSE)
sample(heights,size = 5, replace=TRUE)
sample(heights,size = 15, replace=TRUE)
sample(heights,size = 15, replace=FALSE)
probs= c(0.4, 0.3, 0.2, 0.1, 0, 0, 0,0,0)
sum(probs)
sample(heights, size=10, replace=TRUE, probs=probs)
sample(heights, size=10, replace=TRUE, prob=probs)
sample(heights, size=10, replace=TRUE, prob=probs)
sample(heights, size=10, replace=TRUE, prob=probs)
probs= c(0.4, 0.3, 0.2, 0.1, 0, 0, 0,0,0,0)
sample(heights, size=10, replace=TRUE, prob=probs)
setwd("C:/Users/dizi/Coursera/Intro-to-Data-Analysis/Assignment4")
homicides <- readLines("homicides.txt")
source("count.R")
count()
source("count.R")
count()
count(NULL)
count("o")
source("count.R")
count("o")
source("count.R")
count("o")
source("count.R")
count("o")
source("count.R")
count("o")
count <- function(cause = NULL) {
## Check that "cause" is non-NULL; else throw error
if(cause == NULL)
stop("Error")
causes = c("asphyxiation", "blunt force", "other", "shooting",
"stabbing", "unknown")
for(c in causes)
print(c)
## Check that specific "cause" is allowed; else throw error
cause
## Read "homicides.txt" data file
#   homicides <- readLines("homicides.txt")
## Extract causes of death
## Return integer containing count of homicides for that cause
}
count("other")
source("count.R")
count()
count("ao")
source("count.R")
count("ao")
source("count.R")
count("ao")
count()
source("count.R")
count()
source("count.R")
count()
count(NULL)
source("count.R")
count(NULL)
count("a")
source("count.R")
count("a")
count("asphyxiation")
?paste
source("count.R")
count("asphyxiation")
source("count.R")
count("asphyxiation")
source("count.R")
count("asphyxiation")
source("count.R")
count("asphyxiation")
source("count.R")
count("asphyxiation")
source("count.R")
count("asphyxiation")
source("count.R")
count("asphyxiation")
source("count.R")
count("asphyxiation")
homicides <- readLines("homicides.txt")
length(grep(searchTerm, homicides, ignore.case = TRUE)
)
homicides <- readLines("homicides.txt")
## Extract causes of death
searchTerm <- paste("Cause:", cause)
## Return integer containing count of homicides for that cause
length(grep(searchTerm, homicides, ignore.case = TRUE))
source("count.R")
count("asphyxiation")
count("other")
count("unknown")
num <- count("unknown")
print(num)
count("blunt force")
count("shooting")
count("stabbing")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
submit()
submit()
source("agecount.R")
agecount()
source("agecount.R")
setwd("C:/Users/dizi/Coursera/Intro-to-Data-Analysis/Assignment4")
source("agecount.R")
agecount()
agecount(NULL)
source("agecount.R")
agecount(17)
source("agecount.R")
source("agecount.R")
agecount(17)
source("agecount.R")
agecount(3)
source("agecount.R")
agecount(3)
source("agecount.R")
agecount(21)
homicides[1:10]
source("agecount.R")
agecount(21)
source("agecount.R")
agecount(21)
source("agecount.R")
agecount(21)
source("agecount.R")
agecount(3)
homicides[1:10]
source("agecount.R")
agecount(3)
source("agecount.R")
agecount(3)
source("agecount.R")
agecount(21)
agecount(21)
source("agecount.R")
agecount(21)
agecount(3)
source("agecount.R")
agecount(3)
agecount(21)
source("agecount.R")
agecount(21)
source("agecount.R")
agecount(21)
source("agecount.R")
agecount(3)
source("agecount.R")
agecount(3)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
5
submit()
?rpois
rpois(10, 0.5)
hist(x)
mean(x)
x <- rpois(10, 0.9)
mean(x)
x <- rpois(10, 2.9)
mean(x)
x <- rpois(10, 4.9)
mean(x)
var(x)
x <- rpois(10, 2)
mean(x)
var(x)
x <- rpois(10, 4.9)
mean(x)
var(x)
x <- rpois(10, 7)
mean(x)
var(x)
x <- rpois(10, 2)
mean(x)
var(x)
x <- rpois(10, 4.9)
mean(x)
var(x)
x <- rpois(10, 7)
mean(x)
var(x)
x <- rpois(10, 10)
mean(x)
var(x)
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
dataFrame188 = dataFrame[heightsCM > 188, ]
dataFrame188
dataFrameSubset = dataFrame[heightsCM > 188, ]
dataFrameSubset
mean(dataFrameSubset$weightsK)
?rcauchy
rcauchy(100)
set.seed(41)
cauchyValues = rcauchy(100)
set.seed(415)
cauchyValues = rcauchy(10)
cauchyValues
set.seed(41)
cauchyValues = rcauchy(100)
cauchyValues
set.seed(415)
sample(cauchyValues,10, replace = TRUE)
mean(dataFrameSubset$weightsK)
set.seed(31);
heightsCM = rnorm(30,mean=188, sd=5);
weightsK = rnorm(30,mean=84,sd=3);
hasDaughter = sample(c(TRUE,FALSE),size=30,replace=T);
dataFrame = data.frame(heightsCM,weightsK,hasDaughter);
dataFrameSubset = dataFrame[heightsCM > 188, ]
mean(dataFrameSubset$weightsK)
set.seed(41)
cauchyValues = rcauchy(100)
set.seed(415)
sample(cauchyValues,10, replace = TRUE)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0.5)
pal(seq(0, 1, len = 10))
pal = colorRampPalette(c("red", "yellow"))
pal(2)
pal(10)
pal = colorRampPalette(c("red", "yellow", "blue"))
x <- rnorm(100)
plot(x, col = pal(100))
plot(x, col = pal(10))
plot(x, col = pal(100))
plot(x, col = pal(10))
library(RColorBrewer)
x<- rnorm(1000)
y <- rnorm(1000)
plot(x, y, col= rgb(0,0,0,0.2), pch=19)
as.Date("2012-01-28")
Sys.time()
ime()
unclass(x)
x <- Sys.time()
unclass(x)
weekdays()
weekdays(as.Date("2012-01-28"))
weekdays(as.Date("2013-01-28"))
x  = as.Date("2013-01-28")
weekdays(x)
months(x)
quarters(x)
p <- as.POSIXlt(x)
unclass(p)
names(unclass(p))
p$sec
x <- Sys.time()
p <- as.POSIXlt(x)
names(unclass(p))
p$sec
x <- Sys.time()
p <- as.POSIXct(x)
names(unclass(p))
unclass(p)
p$sec
datestring <- c("January 28, 2013 10:40", "December 9, 2012 09:10")
x <- strptime(datestring, "%B %d %Y %H %M")
x
datestring <- c("January 28, 2013 10:40", "December 9, 2012 09:10")
x <- strptime(datestring, "%B %d %Y %H %M")
x
x <- strptime(datestring, "%B %d %Y %H:%M")
x
datestring <- c("January 28, 2013 10:40", "December 9, 2013 09:10")
x <- strptime(datestring, "%B %d %Y %H:%M")
x
class(x)
x <- strptime(datestring, "%B %d, %Y %H:%M")
class(x)
x
x = as.Date("2012-01-01")
x = as.Date("2012-01-01")
y<- strptime("January 28, 2013 10:40", "%B %d, %Y %H:%M")
x - y
x <- as.POSIXt(x)
x <- as.POSIXt(x)
x <- as.POSIXlt(x)
x - y
x <- Sys.time()
y <- as.POSIXct("2012-10-25 06:00:00", tz = "GMT")
y - x
x - y
setwd("C:/Users/dizi/Coursera/Intro-to-Data-Analysis/Assignment4")
homicides <- readLines("homicides.txt")
homicides[1]
length(grep("Cause: shooting", homicides))
length(grep("Cause: [Ss]hooting", homicides))
length(grep("[Ss]hooting", homicides))
i = length(grep("Cause: [Ss]hooting", homicides))
j = length(grep("[Ss]hooting", homicides))
str(i)
str(j)
i = grep("Cause: [Ss]hooting", homicides)
str(i)
j = grep("[Ss]hooting", homicides)
str(j)
setdiff(i, j)
setdiff(j, i)
grep("^New", state.name)
grep("^New", state.name, value = TRUE)
grepl("^New", state.name)
regexpr("<dd>Found(,*)</dd>", homicides[1:10])
regexpr("<dd>[F|f]ound(,*)</dd>", homicides[1:10])
regexpr("<dd>[F|f]ound(.*)</dd>", homicides[1:10])
substr(homicides[1], 177, 177 + 93 - 1)
r = regexpr("<dd>[F|f]ound(.*)</dd>", homicides[1:10])
regmatches(homicides[1:10], r)
r = regexpr("<dd>[F|f]ound(.*)</dd>", homicides[1:5])
regmatches(homicides[1:5], r)
x = substr(homicides[1], 177, 177 + 93 - 1)
sub("<dd>[F|f]ound on | </dd>", "", x)
gsub("<dd>[F|f]ound on | </dd>", "", x)
x = substr(homicides[1], 177, 177 + 33 - 1)
sub("<dd>[F|f]ound on | </dd>", "", x)
gsub("<dd>[F|f]ound on | </dd>", "", x)
sub("<dd>[F|f]ound on |</dd>", "", x)
gsub("<dd>[F|f]ound on |</dd>", "", x)
regexec("<dd>[F|f]ound on (.*?)</dd>", homicides[1])
regexec("<dd>[F|f]ound on .*?</dd>", homicides[1])
r <- regexec("<dd>[F|f]ound on .*?</dd>", homicides[1:5])
regmatches(homicides[1:5], r)
r <- regexec("<dd>[F|f]ound on (.*?)</dd>", homicides[1:5])
regmatches(homicides[1:5], r)
m <- regmatches(homicides[1:5], r)
dates <- sapply(m, function(x) x[2])
dates <- as.Date(dates, %B %d, %Y)
dates <- as.Date(dates, "%B %d, %Y")
hist(dates, "month", freq = TRUE)
r <- regexec("<dd>[F|f]ound on (.*?)</dd>", homicides)
m <- regmatches(homicides, r)
dates <- sapply(m, function(x) x[2])
dates <- as.Date(dates, "%B %d, %Y")
hist(dates, "month", freq = TRUE)
hist(dates, "year", freq = TRUE)
month
regexec("<dd>[F|f]ound on (.*?)</dd>", homicides[1])
methods("mean")
show
show(1:10)
showMethods("show")
methods("show")
show
getS3method
set.seed(2)
x<- rnorm(100)
mean(x)
head(getS3method("mean", "default"))
tail(getS3method("mean", "default"))
setClass("polygon", representation(x = "numeric", y = "numeric"))
showMethod("polygon")
showMethods("polygon")
setMethod("plot", "polygon",
function(x, y, ...) {
plot(x@x, x@y, type-"n", ...)
xp <- c(x@x, x@x[1])
yp <- c(x@y, x@y[1])
lines(xp, yp)
})
polygon(1, 3)
showMethods("plot")
?setMethod
p <- new("polygon", x = c(1, 2, 3, 4), y = c(1, 2, 3, 1))
plot(p)
p <- new("polygon", x = c(1, 2, 3, 4), y = c(1, 2, 3, 1))
plot(p)
setClass("polygon", representation(x = "numeric", y = "numeric"))
setMethod("plot", "polygon",
function(x, y, ...) {
plot(x@x, x@y, type="n", ...)
xp <- c(x@x, x@x[1])
yp <- c(x@y, x@y[1])
lines(xp, yp)
})
showMethods("plot")
p <- new("polygon", x = c(1, 2, 3, 4), y = c(1, 2, 3, 1))
plot(p)
topo.colors()
topo.colors(1)
rgb(1, 1, 1)
colors()
s <- "I believe his twitter name is \"Powder\""
grep("powder", s)
s <- "the floor is covered with so-called \"powder\""
grep("powder", s)
s <- "PoWdEr is a great game!"
grep("powder", s)
s <- "I believe his twitter name is \"Powder\""
grep("[Pp]owder", s)
s <- "going up and up and up"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", s)
s <- "night night at 8"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", s)
s <- "bye bye from up high"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", s)
s <- "heading, heading by 9"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", s)
s <- "night night at 8"
grep("^([a-z]+) +\1 +[a-z]+ [0-9]", s)
grep("^([a-z]+) +\\1 +[a-z]+ [0-9]", s)
s <- "heading, heading by 9"
grep("^([a-z]+) +\\1 +[a-z]+ [0-9]", s)
grep("<dd>[F|f]ound(.*)</dd>", homicides[1:5])
grep("^s(.*?)r", s)
s <- "she likes rum raisin after running hard"
grep("^s(.*?)r", s)
regexec("<dd>[F|f]ound on (.*?)</dd>", homicides[1])
regmatches(homicides[1:5], r)
r = regexpr("<dd>[F|f]ound(.*)</dd>", homicides[1:5])
regmatches(homicides[1:5], r)
regexec("^s(.*?)r", s)
r = regexpr("^s(.*?)r", s)
regmatches(s, r)
getMethod("mean")
getMethod("plot")
?setOldClass
